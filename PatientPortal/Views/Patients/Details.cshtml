@using ApplicationCore.Enums;
@model ApplicationCore.Entities.Patient
@{
    ViewData["Title"] = "Patient Details";
}

<h2>Patient Details</h2>

<form id="detailsPatient">
    <input type="hidden" asp-for="Id" class="form-control" />
    <div class="form-group">
        <label asp-for="PatientName" class="control-label">Patient Name</label>
        <input asp-for="PatientName" class="form-control" />
    </div>
    <div class="form-group mt-3">
        <label asp-for="DiseaseId" class="control-label">Diseases Name</label>
        <select asp-for="DiseaseId" class="form-control"></select>
    </div>
    <div class="form-group mt-3">
        <label asp-for="EpilepsyType" class="control-label">Epilepsy</label>
        <select asp-for="EpilepsyType" class="form-control">
            @foreach (var epilepsy in Enum.GetValues(typeof(Epilepsy)).Cast<Epilepsy>())
            {
                <option value="@(Convert.ToInt32(epilepsy))">@epilepsy</option>
            }
        </select>
    </div>
    <div>
        <div class="row mt-3">
            <div class="col-sm-5">
                <label>Other NCDs</label>
                <select id="fromNCD" multiple="multiple" class="form-control">
                </select>
            </div>
            <div class="col-sm-5">
                 <label></label>
                <select id="toNCD" multiple="multiple" class="form-control">
                </select>
            </div>
        </div>
        <input type="hidden" asp-for="SelectedNCDs" />
    </div>
    <div>
        <div class="row mt-3">
            <div class="col-sm-5">
                <label>Allergies</label>
                <select id="fromAllergies" multiple="multiple" class="form-control">
                </select>
            </div>
            <div class="col-sm-5">
                <label></label>
                <select id="toAllergies" multiple="multiple" class="form-control">
                </select>
            </div>
        </div>
        <input type="hidden" asp-for="SelectedAllergies" />
    </div>



    <div class="form-group mt-3">
        <a asp-controller="Patients" asp-action="PatientsList" class="btn btn-secondary">Back to List</a>
    </div>
    
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            var editId = $("#Id").val();
            const url = "/api/PatientInformation/EditDataById/" + editId;
            GetAjax(url).then(response => {
                console.log(response);
                populateFields(response);
                setFieldsToReadOnly();
            });
        });

        function populateFields(response) {
            const dropdown = $('#fromNCD');
            const diseaseDropdown = $('#DiseaseId');
            const allergiesDropdown = $('#fromAllergies');
            dropdown.empty();
            diseaseDropdown.empty();
            allergiesDropdown.empty();

            $.each(response.ncDs, function (index, item) {
                $('<option>', {
                    value: item.value,
                    text: item.text
                }).appendTo(dropdown);
            });
            $.each(response.diseases, function (index, item) {
                $('<option>', {
                    value: item.value,
                    text: item.text
                }).appendTo(diseaseDropdown);
            });
            $.each(response.allergies, function (index, item) {
                $('<option>', {
                    value: item.value,
                    text: item.text
                }).appendTo(allergiesDropdown);
            });

            // Set the selected disease
            $('#PatientName').val(response.patientName);
            $('#EpilepsyType').val(response.epilepsyType);
            $('#DiseaseId').val(response.diseaseId);
            $('#SelectedNCDs').val(response.selectedNCDs);
            $('#SelectedAllergies').val(response.selectedAllergies);

            // Move the selected NCDs from fromNCD to toNCD
            var selectedNCDs = response.selectedNCDs.split(',');
            selectedNCDs.forEach(function (ncdId) {
                var option = $('#fromNCD option[value="' + ncdId + '"]');
                $('#toNCD').append(new Option(option.text(), option.val()));
                option.remove();
            });

            var selectedAllergies = response.selectedAllergies.split(',');
            selectedAllergies.forEach(function (allergiesId) {
                var optionAllergies = $('#fromAllergies option[value="' + allergiesId + '"]');
                $('#toAllergies').append(new Option(optionAllergies.text(), optionAllergies.val()));
                optionAllergies.remove();
            });
        }

        function setFieldsToReadOnly() {
            $('#detailsPatient').find('input, select').each(function () {
                $(this).prop('disabled', true);
            });
        }

        function GetAjax(destination) {
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: destination,
                    method: "GET",
                    dataType: "JSON",
                    success: function (response) {
                        resolve(response);
                    },
                    error: function (response) {
                        reject(response);
                    }
                });
            });
        }
    </script>
}
